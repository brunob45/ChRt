name: PlatformIO CI

on: [pull_request, repository_dispatch]

jobs:
  # from opensearch-project/opensearch-build: .github/workflows/manifests.yml
  list-examples:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v3
    - id: set-matrix
      run: echo "::set-output name=matrix::$(ls examples | jq -R -s -c 'split("\n")[:-1]')"

  build:
    needs: list-examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example: ${{ fromJson(needs.list-examples.outputs.matrix) }}
        board: 
          zero,
          # uno, -- build fails
          due,
          teensy30,
          teensy31,
          teensy35,
          teensy36,
          teensy40,
          teensy41
        ]

    steps:
    - uses: actions/checkout@v3
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v3
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Run PlatformIO
      run: pio ci --lib="." --lib="SD" --board=${{ matrix.board }}
      env:
        PLATFORMIO_CI_SRC: examples/${{ matrix.example }}
