diff --git a/src/os/arm/chcore_v6m.c b/src/os/arm/chcore_v6m.c
index 41e4566..a131998 100644
--- a/src/os/arm/chcore_v6m.c
+++ b/src/os/arm/chcore_v6m.c
@@ -24,9 +24,9 @@
  * @addtogroup ARMV6M_CORE
  * @{
  */
-
+#ifdef __arm__  // WHG
 #include "ch.h"
-
+#if (CORTEX_MODEL == 0) || (CORTEX_MODEL == 1)  // WHG
 /*===========================================================================*/
 /* Module local definitions.                                                 */
 /*===========================================================================*/
@@ -157,5 +157,6 @@ void __port_irq_epilogue(uint32_t lr) {
        order to keep the rest of the context switch atomic.*/
   }
 }
-
+#endif  // (CORTEX_MODEL == 0) || (CORTEX_MODEL == 1) WHG
+#endif  // __arm__  WHG
 /** @} */
diff --git a/src/os/arm/chcore_v7m.c b/src/os/arm/chcore_v7m.c
index f248c5c..8d1df88 100644
--- a/src/os/arm/chcore_v7m.c
+++ b/src/os/arm/chcore_v7m.c
@@ -26,9 +26,9 @@
  */
 
 #include <string.h>
-
+#ifdef __arm__  // WHG
 #include "ch.h"
-
+#if (CORTEX_MODEL == 3) || (CORTEX_MODEL == 4) || (CORTEX_MODEL == 7) // WHG
 /*===========================================================================*/
 /* Module local definitions.                                                 */
 /*===========================================================================*/
@@ -391,5 +391,6 @@ void __port_irq_epilogue(void) {
   }
   port_unlock_from_isr();
 }
-
+#endif  // (CORTEX_MODEL == 3) || (CORTEX_MODEL == 4) || (CORTEX_MODEL == 7) WHG
+#endif  // __arm__  WHG
 /** @} */
diff --git a/src/os/arm/chcoreasm_v6m.S b/src/os/arm/chcoreasm_v6m.S
index 9df2c91..922bd0e 100644
--- a/src/os/arm/chcoreasm_v6m.S
+++ b/src/os/arm/chcoreasm_v6m.S
@@ -32,8 +32,10 @@
 #if !defined(TRUE) || defined(__DOXYGEN__)
 #define TRUE    1
 #endif
-
+#ifdef __arm__  //WHG
 #define _FROM_ASM_
+#include "cmparams.h"  // WHG
+#if (CORTEX_MODEL == 0) || (CORTEX_MODEL == 1) // WHG
 #include "chlicense.h"
 #include "chconf.h"
 #include "chcore.h"
@@ -152,5 +154,6 @@ __port_exit_from_isr:
 #endif
 
 #endif /* !defined(__DOXYGEN__) */
-
+#endif  // (CORTEX_MODEL == 0) || (CORTEX_MODEL == 1) WHG
+#endif  // __arm__ WHG
 /** @} */
diff --git a/src/os/arm/chcoreasm_v7m.S b/src/os/arm/chcoreasm_v7m.S
index c180e5e..0222f05 100644
--- a/src/os/arm/chcoreasm_v7m.S
+++ b/src/os/arm/chcoreasm_v7m.S
@@ -32,8 +32,10 @@
 #if !defined(TRUE) || defined(__DOXYGEN__)
 #define TRUE    1
 #endif
-
+#ifdef __arm__  // WHG
 #define _FROM_ASM_
+#include "cmparams.h"  // WHG
+#if (CORTEX_MODEL == 3) || (CORTEX_MODEL == 4) || (CORTEX_MODEL == 7) // WHG
 #include "chlicense.h"
 #include "chconf.h"
 #include "chcore.h"
@@ -240,5 +242,6 @@ __port_exit_from_isr:
 .L1:            b       .L1
 
 #endif /* !defined(__DOXYGEN__) */
-
+#endif  // (CORTEX_MODEL == 3) || (CORTEX_MODEL == 4) || (CORTEX_MODEL == 7) WHG
+#endif  // __arm__ WHG
 /** @} */
diff --git a/src/os/avr/chcore.c b/src/os/avr/chcore.c
index 7a87c47..082e19e 100644
--- a/src/os/avr/chcore.c
+++ b/src/os/avr/chcore.c
@@ -24,7 +24,7 @@
  * @addtogroup AVR_CORE
  * @{
  */
-
+#ifdef __AVR__  // WHG
 #include "ch.h"
 
 /*===========================================================================*/
@@ -155,5 +155,5 @@ void _port_thread_start(void) {
   asm volatile ("icall");
   asm volatile ("call    chThdExit");  /* Used for avr5 Architecture. */
 }
-
+#endif  // _AVR_ WHG
 /** @} */
diff --git a/src/os/rt/src/chthreads.c b/src/os/rt/src/chthreads.c
index 04b3e63..7dfefb0 100644
--- a/src/os/rt/src/chthreads.c
+++ b/src/os/rt/src/chthreads.c
@@ -480,6 +480,7 @@ void chThdRelease(thread_t *tp) {
  *
  * @api
  */
+void chThdExit(msg_t msg) __attribute__((used));  // WHG
 void chThdExit(msg_t msg) {
 
   chSysLock();
